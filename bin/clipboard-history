#!/bin/bash

# Simple clipboard history manager
# Usage: 
#   clipboard-history daemon    # Start monitoring
#   clipboard-history clipboard   # Show history with wofi
#   clipboard-history restart     # Restart daemon (use after script changes)

HIST_FILE="$HOME/.clipboard_history"
MAX_ENTRIES=100

case "$1" in
    daemon)
        echo "Starting clipboard history daemon..."
        # Create history file if it doesn't exist
        touch "$HIST_FILE"

        # Monitor clipboard and append to history file
        wl-paste -w sh -c '
            clip=$(wl-paste -n 2>/dev/null)
            if [ -n "$clip" ] && [ ${#clip} -lt 10000 ]; then
                # Add timestamp and content with proper escaping
                printf "[%s] %s\n" "$(date "+%Y-%m-%d %H:%M:%S")" "$clip" >> "'"$HIST_FILE"'"

                # Keep only last MAX_ENTRIES
                tail -n "'"$MAX_ENTRIES"'" "'"$HIST_FILE"'" > "'"$HIST_FILE"'.tmp" && mv "'"$HIST_FILE"'.tmp" "'"$HIST_FILE"'"
            fi
        ' 2>/dev/null
        ;;

   clipboard)
        if [ ! -f "$HIST_FILE" ] || [ ! -s "$HIST_FILE" ]; then
            notify-send "Clipboard History" "No clipboard history found. Start daemon first."
            exit 1
        fi
	
        # Format entries for wofi (show preview of content)
        formatted_entries=$(tac "$HIST_FILE" | while IFS= read -r line; do
            timestamp=$(echo "$line" | sed 's/^\[\([^]]*\)\].*/\1/')
            content=$(echo "$line" | sed 's/^\[[^]]*\] //')
            # Truncate long content for display
            preview=$(echo "$content" | head -c 100 | tr '\n' ' ')
            if [ ${#content} -gt 100 ]; then
                preview="${preview}..."
            fi
            echo "$timestamp | $preview"
        done)

        # Use wofi for GUI selection
        selected=$(echo "$formatted_entries" | wofi --dmenu --prompt "Clipboard History" --lines 15)
        if [ -n "$selected" ]; then
            # Get the timestamp from selection
            timestamp=$(echo "$selected" | cut -d'|' -f1 | xargs)
            # Find the full content from history file
            content=$(grep "^\[$timestamp\]" "$HIST_FILE" | sed 's/^\[[^]]*\] //')
            echo "$content" | wl-copy
            notify-send "Clipboard History" "Copied to clipboard!"
        fi
        ;;

    restart)
        echo "Restarting clipboard history daemon..."
        # Kill any existing clipboard-history daemons and listeners
        pkill -f "clipboard-history daemon" 2>/dev/null
        pkill -f "wl-paste -w" 2>/dev/null
        sleep 0.5  # Give processes time to die
        # Start new daemon
        $0 daemon &
        ;;

    *)
        echo "Usage: $0 {daemon|clipboard}"
        echo "  daemon    - Start clipboard monitoring"
        echo "  clipboard - Show history with wofi selection (GUI)"
        echo "  restart   - Restart clipboard daemon"
        ;;
esac
